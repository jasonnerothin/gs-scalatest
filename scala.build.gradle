apply plugin: 'scala'

tasks.withType(ScalaCompile) {
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = '4g'
        jvmArgs = ['-XX:MaxPermSize=512m']
    }
    scalaCompileOptions.useAnt = false
    scalaCompileOptions.setAdditionalParameters(['-feature'])
}

task test(overwrite: true, dependsOn: testClasses) << {
    ant.taskdef(name: 'scalatest', classname: 'org.scalatest.tools.ScalaTestAntTask' , classpath: sourceSets.test.runtimeClasspath.asPath)
    ant.scalatest(runpath: sourceSets.test.output.classesDir, haltonfailure: 'true', fork: 'false') {
        reporter(type: 'stdout')
    }
}

project.ext {
    gsScalaLibDir = project.ext.jsHomeDir + '/lib/platform/scala/'
}

ensureDirectory(project.ext.gsScalaLibDir)

//dependencies {
//
//    compile 'org.scala-lang:scala-library:2.10.3'
//
//    compile files((String)project.ext.gsScalaLibDir + 'gs-openspaces-scala.jar')
//
//    testCompile 'org.scalatest:scalatest_2.10:2.0'
//    testCompile 'org.scalamock:scalamock-scalatest-support_2.10:3.0.1'
//    testCompile 'org.scalamock:scalamock-specs2-support_2.10:3.0.1'
//
//}

task hello << {
    println "Hi, I'm scala!"
}